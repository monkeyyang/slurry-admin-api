# Nginx WebSocket代理配置
# 用于支持前后端分离架构的WebSocket连接

# 上游WebSocket服务器
upstream websocket_backend {
    server 127.0.0.1:8848;
}

# 主服务器配置
server {
    listen 443 ssl http2;
    server_name slurry-api.1105.me;

    # SSL证书配置
    ssl_certificate /etc/ssl/certs/slurry-api.1105.me.crt;
    ssl_certificate_key /etc/ssl/private/slurry-api.1105.me.key;
    
    # SSL安全配置
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;

    # 根目录配置（Laravel API）
    root /path/to/your/project/public;
    index index.php;

    # CORS配置
    add_header 'Access-Control-Allow-Origin' 'https://1105.me' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # 处理OPTIONS请求
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://1105.me';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization, X-Requested-With';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Content-Length' 0;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        return 204;
    }

    # WebSocket代理配置
    location /ws/ {
        proxy_pass http://websocket_backend;
        proxy_http_version 1.1;
        
        # WebSocket升级头
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        
        # 基本代理头
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # WebSocket特定配置
        proxy_set_header Origin $http_origin;
        proxy_set_header Sec-WebSocket-Extensions $http_sec_websocket_extensions;
        proxy_set_header Sec-WebSocket-Key $http_sec_websocket_key;
        proxy_set_header Sec-WebSocket-Protocol $http_sec_websocket_protocol;
        proxy_set_header Sec-WebSocket-Version $http_sec_websocket_version;
        
        # 超时配置
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 缓冲配置
        proxy_buffering off;
        proxy_cache off;
    }

    # Laravel API路由
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # PHP处理
    location ~ \.php$ {
        fastcgi_pass unix:/var/run/php/php8.2-fpm.sock;
        fastcgi_index index.php;
        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
        include fastcgi_params;
        
        # 增加超时时间
        fastcgi_read_timeout 300;
        fastcgi_send_timeout 300;
    }

    # 静态文件缓存
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # 安全配置
    location ~ /\. {
        deny all;
    }

    # 日志配置
    access_log /var/log/nginx/slurry-api.1105.me.access.log;
    error_log /var/log/nginx/slurry-api.1105.me.error.log;
}

# HTTP重定向到HTTPS
server {
    listen 80;
    server_name slurry-api.1105.me;
    return 301 https://$server_name$request_uri;
}

# WebSocket健康检查（可选）
server {
    listen 8849;
    server_name localhost;
    
    location /health {
        access_log off;
        return 200 "WebSocket proxy healthy\n";
        add_header Content-Type text/plain;
    }
} 